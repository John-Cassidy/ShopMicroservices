apiVersion: v1
kind: Namespace
metadata:
  name: shop-microservices-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogdb
  labels:
    app: catalogdb
  namespace: shop-microservices-app
spec:
  selector:
    matchLabels:
      app: catalogdb
  template:
    metadata:
      labels:
        app: catalogdb
  spec:
    containers:
      - name: catalogdb
        image: mongo
        ports:
          - containerPort: 2017
        resources:
          limits:
            cpu: '500m'
            memory: '128Mi'
          requests:
            cpu: '250m'
            memory: '64Mi'
        env:
          - name: MONGO_INITDB_ROOT_USERNAME
            valueFrom:
              secretKeyRef:
                name: mongo-secret
                key: mongo-root-username
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongo-secret
                key: mongo-root-password
        volumeMounts:
          - name: mongo-data
            mountPath: /data/db
    volumes:
      - name: mongo-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: catalogdb-service
  namespace: shop-microservices-app
spec:
  selector:
    app: catalogdb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: v1
kind: Secret
metadata:
  name: mongo-secret
  namespace: shop-microservices-app
type: Opaque
data:
  mongo-root-username: dXNlcm5hbWU=
  mongo-root-password: cGFzc3dvcmQ=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: catalog-configmap
  namespace: shop-microservices-app
data:
  connection_string: mongodb://username:password@catalogdb-service:27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: basketdb
  labels:
    app: basketdb
  namespace: shop-microservices-app
spec:
  selector:
    matchLabels:
      app: basketdb
  template:
    metadata:
      labels:
        app: basketdb
    spec:
      containers:
        - name: basketdb
          image: redis:alpine
          ports:
            - containerPort: 6379
          resources:
            limits:
              cpu: '500m'
              memory: '256Mi'
            requests:
              cpu: '250m'
              memory: '128Mi'
          volumeMounts:
            - name: redis-data
              mountPath: /data/redis
      volumes:
        - name: redis-data
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: discountdb
  labels:
    app: discountdb
  namespace: shop-microservices-app
spec:
  selector:
    matchLabels:
      app: discountdb
  template:
    metadata:
      labels:
        app: discountdb
    spec:
      containers:
        - name: discountdb
          image: postgres
          ports:
            - containerPort: 5432
          resources:
            limits:
              cpu: '500m'
              memory: '256Mi'
            requests:
              cpu: '250m'
              memory: '128Mi'
          volumeMounts:
            - name: discountdb-data
              mountPath: /data/discountdb
      volumes:
        - name: discountdb-data
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orderdb
  labels:
    app: orderdb
  namespace: shop-microservices-app
spec:
  selector:
    matchLabels:
      app: orderdb
  template:
    metadata:
      labels:
        app: orderdb
    spec:
      containers:
        - name: orderdb
          image: mcr.microsoft.com/mssql/2022-latest
          ports:
            - containerPort: 1433
          resources:
            limits:
              cpu: '500m'
              memory: '256Mi'
            requests:
              cpu: '250m'
              memory: '128Mi'
          env:
            - name: MSSQL_PID
              value: 'Developer'
            - name: ACCEPT_EULA
              value: 'Y'
            - name: MSSQL_SA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: orderdb-secret
                  key: MSSQL_SA_PASSWORD
          volumeMounts:
            - name: orderdb-data
              mountPath: /data/orderdb
      volumes:
        - name: orderdb-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: orderdb-service
  namespace: shop-microservices-app
spec:
  selector:
    app: orderdb
  ports:
    - protocol: TCP
      port: 1433
      targetPort: 1433
---
apiVersion: v1
kind: Secret
metadata:
  name: orderdb-secret
  namespace: shop-microservices-app
type: Opaque
data:
  MSSQL_SA_PASSWORD: U3dOMTIzNDU2Nzg=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: shop-microservices-app
spec:
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management-alpine
          ports:
            - containerPort: 15672
            - containerPort: 5672
          resources:
            limits:
              cpu: '500m'
              memory: '256Mi'
            requests:
              cpu: '250m'
              memory: '128Mi'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
  namespace: shop-microservices-app
spec:
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      containers:
        - name: pgadmin
          image: dpage/pgadmin4
          ports:
            - containerPort: 80
          resources:
            limits:
              cpu: '500m'
              memory: '256Mi'
            requests:
              cpu: '250m'
              memory: '128Mi'
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              valueFrom:
                secretKeyRef:
                  name: pgadmin-secret
                  key: PGADMIN_DEFAULT_EMAIL
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgadmin-secret
                  key: PGADMIN_DEFAULT_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin-service
  namespace: shop-microservices-app
spec:
  selector:
    app: pgadmin
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: pgadmin-secret
  namespace: shop-microservices-app
type: Opaque
data:
  PGADMIN_DEFAULT_EMAIL: YWRtaW5AYXNwbmV0cnVuLmNvbQ== # YWRtaW5AZ21haWwuY29t
  PGADMIN_DEFAULT_PASSWORD: YWRtaW4xMjM0 # cGFzc3dvcmQ=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalog-api
  namespace: shop-microservices-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: catalog-api
  template:
    metadata:
      labels:
        app: catalog-api
    spec:
      containers:
        - name: catalog-api
          image: jpcassidy/shopmicroservices-catalogapi:latest
          ports:
            - containerPort: 80
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: 'Development'
            - name: ASPNETCORE_URLS
              value: 'http://*:80'
            - name: DatabaseSettings__ConnectionString
              valueFrom:
                configMapKeyRef:
                  name: catalog-configmap
                  key: connection_string
            - name: ElasticConfiguration__Uri
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-configmap
                  key: uri
          resources:
            limits:
              cpu: '500m'
              memory: '256Mi'
            requests:
              cpu: '250m'
              memory: '128Mi'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: basket-api
  namespace: shop-microservices-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: basket-api
  template:
    metadata:
      labels:
        app: basket-api
    spec:
      containers:
        - name: basket-api
          image: jpcassidy/shopmicroservices-basketapi:latest
          ports:
            - containerPort: 80
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: 'Development'
            - name: ASPNETCORE_URLS
              value: 'http://*:80'
            - name: CacheSettings__ConnectionString
              valueFrom:
                configMapKeyRef:
                  name: basket-configmap
                  key: cachesettings-connectionstring
            - name: GrpcSeetings__DiscountUrl
              valueFrom:
                configMapKeyRef:
                  name: basket-configmap
                  key: grpcsettings-discounturl
            - name: EventBusSettings__HostAddress
              valueFrom:
                configMapKeyRef:
                  name: basket-configmap
                  key: eventbussettings-hostaddress
            - name: ElasticConfiguration__Uri
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-configmap
                  key: uri
          resources:
            limits:
              cpu: '500m'
              memory: '256Mi'
            requests:
              cpu: '250m'
              memory: '128Mi'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: basket-configmap
data:
  cachesettings-connectionstring: basketdb:6379
  grpcsettings-discounturl: http://discount-api:80
  eventbussettings-hostaddress: amqp://guest:guest@rabbitmq:5672
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: discount-grpc
  namespace: shop-microservices-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: discount-grpc
  template:
    metadata:
      labels:
        app: discount-grpc
    spec:
      containers:
        - name: discount-grpc
          image: jpcassidy/shopmicroservices-discountgrpc:latest
          ports:
            - containerPort: 80
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: 'Development'
            - name: ASPNETCORE_URLS
              value: 'http://*:80'
            - name: DatabaseSettings__ConnectionString
              valueFrom:
                secretKeyRef:
                  name: discountdb-secret
                  key: discountdb-connectionstring
            - name: ElasticConfiguration__Uri
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-configmap
                  key: uri
          resources:
            limits:
              cpu: '500m'
              memory: '256Mi'
            requests:
              cpu: '250m'
              memory: '128Mi'
---
apiVersion: v1
kind: Secret
metadata:
  name: discountdb-secret
  namespace: shop-microservices-app
  type: Opaque
  data:
    discountdb-connectionstring: U2VydmVyPWRpc2NvdW50ZGI7UG9ydD01NDMyO0RhdGFiYXNlPURpc2NvdW50RGI7VXNlciBJZD1hZG1pbjtQYXNzd29yZD1hZG1pbjEyMzQ7 # bW9uZ29kYjoxMjM0NTY3OA==
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: ordering-api
#   namespace: shop-microservices-app
# spec:
#   selector:
#     matchLabels:
#       app: ordering-api
#   template:
#     metadata:
#       labels:
#         app: ordering-api
#     spec:
#       containers:
#         - name: ordering-api
#           image: orderingapi
#           ports:
#             - containerPort: 80
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: ocelot-apigw
#   namespace: shop-microservices-app
# spec:
#   selector:
#     matchLabels:
#       app: ocelot-apigw
#   template:
#     metadata:
#       labels:
#         app: ocelot-apigw
#     spec:
#       containers:
#         - name: ocelot-apigw
#           image: ocelotapigw
#           ports:
#             - containerPort: 80
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: shopping-aggregator
#   namespace: shop-microservices-app
# spec:
#   selector:
#     matchLabels:
#       app: shopping-aggregator
#   template:
#     metadata:
#       labels:
#         app: shopping-aggregator
#     spec:
#       containers:
#         - name: shopping-aggregator
#           image: shoppingaggregator
#           ports:
#             - containerPort: 80
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: aspnetrun-basics
#   namespace: shop-microservices-app
# spec:
#   selector:
#     matchLabels:
#       app: aspnetrun-basics
#   template:
#     metadata:
#       labels:
#         app: aspnetrun-basics
#     spec:
#       containers:
#         - name: aspnetrun-basics
#           image: aspnetrunbasics
#           ports:
#             - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: shop-microservices-app
spec:
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1
          ports:
            - containerPort: 9200
            - containerPort: 9300
          env:
            - name: discovery.type
              value: single-node
            - name: xpack.security.enabled
              value: 'true'
            - name: xpack.watcher.enabled
              value: 'false'
            - name: ES_JAVA_OPTS
              value: '-Xms512m -Xmx512m'
          resources:
            limits:
              cpu: '500m'
              memory: '256Mi'
            requests:
              cpu: '250m'
              memory: '128Mi'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-configmap
  namespace: shop-microservices-app
data:
  uri: http://elasticsearch:9200
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: discount-api
#   namespace: shop-microservices-app
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: discount-api
#   template:
#     metadata:
#       labels:
#         app: discount-api
#     spec:
#       containers:
#         - name: discount-api
#           image: jpcassidy/shopmicroservices-discountapi:latest
#           ports:
#             - containerPort: 80
#           env:
#             - name: ASPNETCORE_ENVIRONMENT
#               value: 'Development'
#             - name: ASPNETCORE_URLS
#               value: 'http://*:80'
#             - name: DatabaseSettings__ConnectionString
#               valueFrom:
#                 secretKeyRef:
#                   name: discountdb-secret
#                   key: discountdb-connectionstring
#             - name: ElasticConfiguration__Uri
#               valueFrom:
#                 configMapKeyRef:
#                   name: elasticsearch-configmap
#                   key: uri
#           resources:
#             limits:
#               cpu: '500m'
#               memory: '256Mi'
#             requests:
#               cpu: '250m'
#               memory: '128Mi'
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: kibana
#   namespace: shop-microservices-app
# spec:
#   selector:
#     matchLabels:
#       app: kibana
#   template:
#     metadata:
#       labels:
#         app: kibana
#     spec:
#       containers:
#         - name: kibana
#           image: docker.elastic.co/kibana/kibana:7.14.1
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: webstatus
#   namespace: shop-microservices-app
# spec:
#   selector:
#     matchLabels:
#       app: webstatus
#   template:
#     metadata:
#       labels:
#         app: webstatus
#     spec:
#       containers:
#         - name: webstatus
#           image: webstatus
#           ports:
#             - containerPort: 80
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: mongo-data
#   namespace: shop-microservices-app
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 1Gi
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: postgres-data
#   namespace: shop-microservices-app
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 1Gi

# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: pgadmin-data
#   namespace: shop-microservices-app
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 1Gi
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: elasticsearch-data
#   namespace: shop-microservices-app
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 1Gi
